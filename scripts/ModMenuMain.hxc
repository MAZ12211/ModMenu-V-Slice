import funkin.modding.PolymodHandler;
import funkin.modding.base.ScriptedMusicBeatSubState;
import funkin.modding.events.ScriptEvent;
import funkin.modding.module.ScriptedModule;
import funkin.ui.mainmenu.MainMenuState;
import funkin.util.Constants;

import flixel.FlxG;
import funkin.graphics.FunkinSprite;
import funkin.util.ReflectUtil;
import funkin.ui.credits.CreditsState;
import funkin.ui.story.StoryMenuState;

class ModMenuMain extends ScriptedModule {

    var config:JsonConfig;

    var configValues:Dynamic = {
        string: "Funkin",
        integer: 69
    };

    function new() {
        super("ModMenuMain");

        config = new JsonConfig("ModMenu", configValues);
    }

    override function onCreate(event:ScriptEvent) {
        FunkinSprite.cacheTexture(Paths.image("modmenu/default_icon"));
    }

    override function onStateChangeEnd(event:StateChangeScriptEvent) {
        if (Std.isOfType(event.targetState, MainMenuState)) {
            var menuState:MainMenuState = event.targetState;

            var prevText = menuState.leftWatermarkText.text;
            var index = prevText.indexOf("Newgrounds:");
            var newText = (index != -1) ? "\n" + prevText.substr(index) : "";
            menuState.leftWatermarkText.text = "Friday Night Funkin' " + Constants.VERSION.substr(1) + newText + "\n" + PolymodHandler.getAllMods().length + " mods Loaded";
            menuState.leftWatermarkText.y -= (index != -1) ? 30 : 15;
        }
    }

    override function onUpdate(event:UpdateScriptEvent) {
        if (Std.isOfType(FlxG.state, CreditsState) || Std.isOfType(FlxG.state, StoryMenuState)) return;
        if (FlxG.keys.justPressed.TAB && ReflectUtil.getAnonymousField(ReflectUtil.getAnonymousField(FlxG.state.subState?._asc, "_c"), "name") != "ModMenuSubState") {
            FlxG.state.openSubState(ScriptedMusicBeatSubState.init("ModMenuSubState"));
        }
    }
}

