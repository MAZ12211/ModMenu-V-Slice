import funkin.graphics.FunkinSprite;
import funkin.modding.PolymodHandler;
import funkin.modding.PolymodErrorHandler;
import funkin.modding.base.ScriptedMusicBeatSubState;
import funkin.modding.events.ScriptEvent;
import funkin.modding.module.ScriptedModule;
import funkin.play.PauseSubState;
import funkin.ui.mainmenu.MainMenuState;
import funkin.util.Constants;
import funkin.util.ReflectUtil;

import flixel.FlxG;

class ModMenuMain extends ScriptedModule {

    var config:JsonConfig;

    var configValues:Dynamic = {
        playerName: "Boyfriend",
        difficulty: "Normal",
        audio: {
            music: 0.8,
            sfx: 0.9
        },
        unlockedSongs: ["Tutorial", "Bopeebo"]
    };

    function new() {
        super("ModMenuMain");

        // startsWith didn't work on my end for some reason even after importing
        if (PolymodHandler.loadedModIds.contains("JsonConfig-0.6.x")) config = new JsonConfig("ModMenu", configValues);
        else PolymodErrorHandler.showAlert("Dependency Missing for Mod Menu", "JsonConfg mod is not found or disabled.\nPlease download it.");
    }

    override function onCreate(event:ScriptEvent) {
        FunkinSprite.cacheTexture(Paths.image("modmenu/default_icon"));
        FunkinSprite.cacheTexture(Paths.image("modmenu/funkin_icon"));
        FunkinSprite.cacheTexture(Paths.image("modmenu/ui/reset"));
    }

    override function onStateChangeEnd(event:StateChangeScriptEvent) {
        if (Std.isOfType(event.targetState, MainMenuState)) {
            var menuState:MainMenuState = event.targetState;

            var prevText = menuState.leftWatermarkText.text;
            var index = prevText.indexOf("Newgrounds:");
            var newText = (index != -1) ? "\n" + prevText.substr(index) : "";
            menuState.leftWatermarkText.text = "Friday Night Funkin' " + Constants.VERSION.substr(1) + newText + "\n" + PolymodHandler.getAllMods().length + " mods Loaded";
            menuState.leftWatermarkText.y -= (index != -1) ? 30 : 15;
        }
    }

    override function onUpdate(event:UpdateScriptEvent) {
        if (!(FlxG.state is MainMenuState) && !(FlxG.state is PauseSubState)) return;
        if (FlxG.keys.justPressed.TAB && ReflectUtil.getAnonymousField(ReflectUtil.getAnonymousField(FlxG.state.subState?._asc, "_c"), "name") != "ModMenuSubState") {
            FlxG.state.openSubState(ScriptedMusicBeatSubState.init("ModMenuSubState"));
        }
    }
}

